<?php

declare(strict_types=1);

namespace App\Http\Controllers\Api\App;

use App\Contracts\Services\{{ .PathName.Singular.Title }}ServiceInterface;
use App\Exceptions\Api\App\APIErrorException;
use App\Http\Controllers\Controller;
{{- if eq .RequestSchemaName.Default.Title "" }}
use App\Http\Requests\Api\App\Request;
{{- else }}
use App\Http\Requests\Api\App\{{ .RequestSchemaName.Default.Title }};
{{- end }}
use App\Http\Resources\Api\App\{{ .SuccessResponse.Schema.Name.Default.Title }};
use App\Http\Resources\Api\App\Status;

class {{ .PathName.Default.Title }}{{ .Method.Title }}Controller extends Controller
{
    protected {{ .Method.Title }}{{ .PathName.Default.Title }}UseCaseInterface $useCase;

    public function __construct({{ .Method.Title }}{{ .PathName.Default.Title }}UseCaseInterface $useCase)
    {
        $this->useCase = $useCase;
    }

    /**
     * @throws APIErrorException
     */
    public function __invoke(
{{- range .Parameters }}
{{- if eq .In "path" }}
        {{ .ObjectType }} ${{ .Name.Default.Camel }},
{{- end }}
{{ end }}
{{- if eq .RequestSchemaName.Default.Title "" }}
        Request $request
{{- else }}
        {{ .RequestSchemaName.Default.Title }} $request
{{- end }}
        {{ .RequestSchemaName.Default.Title }} $request
    ): {{ .SuccessResponse.Schema.Name.Default.Title }}
    {
        $result = $this->{{ .Method.Title }}{{ .PathName.Default.Title }}UseCase->handle();
        if (!$success) {
            throw new APIErrorException('something wrong', 400);
        }

        return Status::ok("success", 200);
    }
}
